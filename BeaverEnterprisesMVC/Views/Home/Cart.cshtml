@model List<BeaverEnterprisesMVC.Models.Ticket>

@functions {
    public string GetDuration(string departureTime, string arrivalTime)
    {
        try
        {
            if (TimeSpan.TryParse(departureTime, out TimeSpan departure) &&
                TimeSpan.TryParse(arrivalTime, out TimeSpan arrival))
            {
                TimeSpan duration = arrival - departure;
                if (duration.TotalHours < 0)
                {
                    duration = TimeSpan.FromHours(24) + duration;
                }
                return duration.TotalHours.ToString("F1");
            }
            return "N/A";
        }
        catch (Exception)
        {
            return "N/A";
        }
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart - Your Tickets</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .navbarcustom {
            display: flex;
            background: rgba(255, 255, 255, 0.7);
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            color: rgb(130, 89, 46);
            width: 100%;
            max-width: 1250px;
            margin: 20px auto;
        }

        .centerBookingHead {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 15vh;
            width: 100%;
        }

        .airline-do-Simao {
            font-size: 24px;
            font-weight: bold;
            color: rgb(130, 89, 46);
        }

        .leftnavbarcustom {
            margin-left: auto;
            display: flex;
            gap: 20px;
        }

        .navitem a {
            color: rgb(130, 89, 46);
            text-decoration: none;
            font-size: 1.1rem;
        }

        .ticket-card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 20px;
        }

        .ticket-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }

        .ticket-time {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .text-muted {
            color: #666;
            font-size: 0.9rem;
        }

        .ticket-duration {
            font-size: 1rem;
            color: #333;
        }

        .ticket-airline {
            font-size: 1rem;
            color: rgb(130, 89, 46);
        }

        .price-box {
            text-align: center;
            padding: 10px;
            border: 1px solid rgb(130, 89, 46);
            border-radius: 5px;
        }

        .btn-primary-booking {
            background-color: rgb(130, 89, 46);
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 1.1rem;
            border-radius: 5px;
        }

        .btn-danger-booking {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            font-size: 1rem;
            border-radius: 5px;
        }

        .total-price {
            font-size: 1.5rem;
            font-weight: bold;
            color: rgb(130, 89, 46);
        }

        .footer {
            background-color: #f8f9fa;
            padding: 20px;
            margin-top: 40px;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <div class="centerBookingHead">
        <div class="navbarcustom">
            <a href="@Url.Action("Index", "Home")" class="airline-do-Simao">Airline</a>
            <div class="leftnavbarcustom">
                <div class="navitem"><a href="@Url.Action("Register", "Home")"><i class="fas fa-user-circle"></i> Login & Registration</a></div>
                <div class="navitem"><a href="@Url.Action("BookingAvailability", "Home")">Book</a></div>
                <div class="navitem"><a href="@Url.Action("CheckIn", "Home")">Check-In</a></div>
                <div class="navitem"><a href="#">Contact</a></div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mt-4">
        <h2>Your Cart</h2>

        @if (!Model.Any())
        {
            <div class="alert alert-info" role="alert">
                Your cart is empty. <a href="@Url.Action("BookingAvailability", "Home")" class="alert-link">Book a flight now!</a>
            </div>
        }
        else
        {
            decimal totalPrice = 0;
            var groupedTickets = Model.GroupBy(t => t.IdPassager).ToList();

            @foreach (var group in groupedTickets)
            {
                <div class="passenger-group">
                    <h4>Passenger Group (Temp ID: @group.Key)</h4>

                    @foreach (var ticket in group)
                    {
                        var flightSchedule = ticket?.IdFlightScheduleNavigation;
                        var flight = flightSchedule?.IdFlightNavigation;

                        totalPrice += ((decimal?)ticket.Price) ?? 0;

                        @if (flight != null && flight.IdOriginNavigation != null && flight.IdDestinationNavigation != null)
                        {
                            <div class="ticket-card">
                                <!-- Flight Information -->
                                <div class="ticket-header">
                                    <div>
                                        <div class="ticket-time">Departure: @flight.DepartureTime</div>
                                        <div class="text-muted">@flight.IdOriginNavigation.Name - Terminal 1</div>
                                    </div>
                                    <div>
                                        <div class="ticket-duration">Direct</div>
                                        <div class="text-muted">
                                            Duration: @(
                                      !string.IsNullOrEmpty(flight.ArrivalTime) && !string.IsNullOrEmpty(flight.DepartureTime)
                                      ? GetDuration(flight.DepartureTime, flight.ArrivalTime)
                                      : "N/A"
                                      )h
                                        </div>
                                    </div>
                                    <div>
                                        <div class="ticket-time">Arrival: @flight.ArrivalTime</div>
                                        <div class="text-muted">@flight.IdDestinationNavigation.Name - Terminal 1</div>
                                    </div>
                                    <div class="ticket-airline">
                                        ✈ Operated by TAP Air Portugal
                                    </div>
                                    <div class="price-box">
                                        <p>Class: @flight.IdClassNavigation?.Name</p>
                                        <h4>€@(ticket.Price ?? 0)</h4>
                                    </div>
                                </div>

                                <!-- Ticket Information -->
                                <div class="mt-3">
                                    <h6>Ticket ID: @ticket.Id (Temporary)</h6>
                                    <p>Seat Number: @ticket.SeatNumber</p>
                                    <p>Status: @ticket.Status</p>
                                    <p>Type: @(ticket.IdFlightScheduleNavigation?.IdFlightNavigation?.IdOriginNavigation.Name == flight.IdOriginNavigation.Name ? "Departure" : "Arrival")</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning" role="alert">
                                Ticket is missing flight information.
                            </div>
                        }
                    }

                    <!-- Button to Add Passenger Information -->
                    <div class="mt-3 text-end">
                        <button class="btn-passenger-info" onclick="addPassengerInfo(@group.Key)">Add Passenger Info</button>
                    </div>
                </div>
            }

            <!-- Total Price and Proceed -->
            <div class="text-end mt-4">
                <h3 class="total-price">Total Price: €@totalPrice</h3>
                <p>Includes taxes, fees, and surcharges</p>
                <a href="@Url.Action("PassengerInformation", "Home")" class="btn-primary-booking">Proceed to Checkout</a>
            </div>
        }
    </div>

    <!-- Footer -->
    <footer class="footer text-center">
        <p>© 2025 Airline. All Rights Reserved.</p>
    </footer>

    <script>
        function addPassengerInfo(passengerId) {
            if (confirm("Do you want to add passenger information for this group?")) {
                // Redirect to PassengerInformation with the temporary passenger ID
                window.location.href = `@Url.Action("PassengerInformation", "Home")?passengerId=${passengerId}`;
            }
        }

        function removeTicket(index) {
            if (confirm("Are you sure you want to remove this ticket from your cart?")) {
                fetch('/Home/RemoveTicketFromCart', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ index: index })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Ticket removed from cart.");
                        window.location.reload();
                    } else {
                        alert("Error removing ticket: " + data.message);
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("An error occurred while removing the ticket.");
                });
            }
        }
    </script>
</body>
</html>